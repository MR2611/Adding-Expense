const orderIdsToUpdate = [1, 2, 3]; // Replace with your actual order IDs

// Define a function to update the order status
function updateOrderStatus(orderId) {
  // Simulate a database update, returning a promise
  return new Promise((resolve, reject) => {
    // Replace this with your actual database update logic
    // For example, using an ORM like Sequelize or Mongoose
    // Here, we simulate an error for demonstration purposes
    setTimeout(() => {
      console.log(`Updating order ${orderId} to FAILED`);
      reject(new Error(`Failed to update order ${orderId}`));
    }, 1000); // Simulated delay
  });
}

// Use Promise.all to update order statuses concurrently
Promise.all(orderIdsToUpdate.map(updateOrderStatus))
  .then(() => {
    console.log('All orders updated successfully');
  })
  .catch((error) => {
    console.error('Error updating orders:', error);
  });
